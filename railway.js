var apikey_;

function scanResponseCode_ (responseCode, callback) {
  var err = {
    200: null,
    210: "Train doesn’t run on the date queried.",
    211: "Train doesn’t have journey class queried.",
    220: "Flushed PNR.",
    221: "Invalid PNR.",
    230: "Date chosen for the query is not valid for the chosen parameters.",
    404: "Data couldn’t be loaded on our servers. No data available.",
    405: "Data couldn’t be loaded on our servers. Request couldn’t go through.",
    500: "Unauthorized API Key.",
    501: "Account Expired.",
    502: "Invalid arguments passed."
  };
  return callback(err[responseCode]);
}

/**
 *@param {String} API key
 */
function setApikey(apikey) {
  return apikey_ = apikey;
}

/**
 * @param {String} pnr 10 digit pnr
 */
function checkPnr (pnrno, callback) {
  var res = UrlFetchApp.fetch('https://api.railwayapi.com/v2/pnr-status/pnr/'+pnrno+'/apikey/'+apikey_+'/');
  var response = JSON.parse(res.getContentText());
  return scanResponseCode_(response.response_code, function(resMsg){
    return callback(resMsg, res.getContentText())
  });
}

function stationCode (stationName, callback) {
  var res = UrlFetchApp.fetch('https://api.railwayapi.com/v2/name-to-code/station/'+stationName+'/apikey/'+apikey_+'/');
  var response = JSON.parse(res.getContent());
  return scanResponseCode_(response.response_code, function(resMsg){
    return callback(resMsg, res.getContent());
  });
}

function stationName (stationCode, callback) {
  var res = UrlFetchApp.fetch('https://api.railwayapi.com/v2/code-to-name/code/'+stationCode+'/apikey/'+apikey_+'/');
  var response = JSON.parse(res.getContent());
  return scanResponseCode_(response.response_code, function(resMsg){
    return callback(resMsg, res.getContentText());
  });
}

function liveTrainStatus (trainNo, date, callback) {
  var res = UrlFetchApp.fetch('https://api.railwayapi.com/v2/live/train/'+trainNo+'/date/'+date+'/apikey/'+apikey_+'/');
  var response = JSON.parse(res.getContentText());
  return scanResponseCode_(response.response_code, function(resMsg){
    return callback(resMsg, response);
  });
}

function trainRoute (trainNo) {
  var res = UrlFetchApp.fetch('https://api.railwayapi.com/v2/route/train/'+trainNo+'/apikey/'+apikey_+'/');
  var response = JSON.parse(res.getContentText());
  return scanResponseCode_(response.response_code, function(resMsg){
    return callback(resMsg, response);
  });
}

function trainBetweenStations (source, destination, date, callback) {
  var res = UrlFetchApp.fetch('https://api.railwayapi.com/v2/between/source/'+source+'/dest/'+destination+'/date/'+date+'/apikey/'+apikey_+'/');
  var response = JSON.parse(res.getContentText());
  return scanResponseCode_(response.response_code, function(resMsg){
    return callback(resMsg, response);
  });
}

function name_number (train, callback) {
  var res = UrlFetchApp.fetch('https://api.railwayapi.com/v2/name-number/train/'+train+'/apikey/'+apikey_+'/');
  var response = JSON.parse(res.getContentText());
  return scanResponseCode_(response.response_code, function(resMsg){
    return callback(resMsg, response);
  });
}

function seatAvailability () {
  var slice = [].slice;
  var callback, checkQuota, date, destination, i, quota, source, trainNo, type;
  trainNo = arguments[0], source = arguments[1], destination = arguments[2], date = arguments[3], type = arguments[4], checkQuota = 7 <= arguments.length ? slice.call(arguments, 5, i = arguments.length - 1) : (i = 5, []), callback = arguments[i++];
  if (validateDay_(date) === false) {
    return callback('Error: Invalide Date format. Please use DD-MM-YYYY', null);
  }
  if (checkQuota.length === 0) {
    quota = 'GN';
  } else {
    quota = checkQuota[0];
  }
  var res = UrlFetchApp.fetch('https://api.railwayapi.com/v2/check-seat/train/'+trainNo+'/source/'+source+'/dest/'+destination+'/date/'+date+'/pref/'+type+'/quota/'+quota+'/apikey/'+apikey_+'/');
  var response = JSON.parse(res.getContentText());
  return scanResponseCode_(response.response_code, function(resMsg) {
    return callback(resMsg, response);
  });
}

// ---
// generated by coffee-script 1.9.2
